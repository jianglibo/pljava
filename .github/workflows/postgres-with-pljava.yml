# This is a basic workflow to help you get started with Actions
# git push origin v3

name: Postgresql with Pljava plugin

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ REL1_6_STABLE ]
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: datafocus/postgresql_11_with_java_11
  BUILDER_RESP_ME: builder.resp.me
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup java 11 environment
      uses: actions/setup-java@v1
      with:
        java-version: 11
        cache: maven
    - name: Build with Maven
      run: mvn -pl pljava-examples -am clean install
    - name: Prepare docker folder
      run: cp pljava-examples/target/*.jar docker
    - name: cp jar from local m2 repository
      run: cp ~/.m2/repository/org/json/json/20210307/json-20210307.jar docker
    # - name: Log in to the Container registry
    #   uses: docker/login-action@v1
    #   with:
    #     registry: ${{ env.REGISTRY }}
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to the Builder.resp.me
      uses: docker/login-action@v1
      with:
        registry: ${{ env.BUILDER_RESP_ME }}
        username: datafocus
        password: ${{ secrets.RESP_ME_PASS }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.BUILDER_RESP_ME }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

